{"version":3,"sources":["components/contactForm/ContactForm.js","components/filter/FilterByName.js","components/contactList/ContactList.js","App.js","index.js"],"names":["ContactForm","state","name","number","handleChange","e","target","value","setState","handleSubmit","preventDefault","totalState","id","uuidv4","props","formSubmitHandler","reset","filter","this","onSubmit","htmlFor","type","pattern","title","required","onChange","Component","Filter","filterList","ContactList","getVisibleContacts","deleteContact","map","contact","onClick","App","contacts","data","find","alert","prevState","getVisibleList","normalizeFilter","toLowerCase","includes","className","FilterByName","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a7529bb6.chunk.js","sourcesContent":["import { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nclass ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    let idFullName = uuidv4();\n    const totalState = {\n      id: idFullName,\n      name: this.state.name,\n      number: this.state.number,\n    };\n\n    this.props.formSubmitHandler(totalState);\n\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({\n      filter: \"\",\n      name: \"\",\n      number: \"\",\n    });\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label htmlFor=\"sendName\">\n          Name\n        </label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          value={name}\n          onChange={this.handleChange}\n          id=\"sendName\"\n        />\n        <label htmlFor=\"sendTel\">Number</label>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          onChange={this.handleChange}\n          value={number}\n          id=\"sendTel\"\n        />\n        <button type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  formSubmitHandler: PropTypes.func,\n};\n\nexport default ContactForm;\n","import PropTypes from \"prop-types\";\nfunction Filter({ filter, filterList }) {\n  return (\n    <div>\n      <p>Find contacts by name</p>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        onChange={filterList}\n        value={filter}\n      />\n    </div>\n  );\n}\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n  formSubmitHandler: PropTypes.func,\n};\n\nexport default Filter;\n","import PropTypes from \"prop-types\";\n\nfunction ContactList({ getVisibleContacts, deleteContact }) {\n  return (\n    <ul>\n      {getVisibleContacts.map((contact) => (\n        <li key={contact.id}>\n          {contact.name}: {contact.number}\n          <button\n            type=\"submit\"\n            onClick={() => deleteContact(contact)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  getVisibleContacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    })\n  ),\n};\n\nexport default ContactList;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport ContactForm from './components/contactForm/ContactForm';\nimport FilterByName from './components/filter/FilterByName';\nimport ContactList from './components/contactList/ContactList';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  filterList = e => {\n    this.setState({\n      filter: e.target.value,\n    });\n  };\n\n  formSubmitHandler = data => {\n    const findContacts = this.state.contacts.find(\n      contact => contact.name === data.name,\n    );\n\n    !findContacts\n      ? this.setState(prevState => ({\n          contacts: [data, ...prevState.contacts],\n        }))\n      : alert(`${data.name} is already in contacts.`);\n  };\n\n  getVisibleList = () => {\n    const { filter, contacts } = this.state;\n    const normalizeFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizeFilter),\n    );\n  };\n\n  deleteContact = data => {\n    return this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== data.id),\n    }));\n  };\n\n  render() {\n    const { filter } = this.state;\n\n    const getVisibleContacts = this.getVisibleList();\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"titlePhonebook\">Phonebook</h1>\n        <ContactForm formSubmitHandler={this.formSubmitHandler} />\n\n        <h1 className=\"titleContacts\">Contacts</h1>\n        <FilterByName filter={filter} filterList={this.filterList} />\n        <ContactList\n          getVisibleContacts={getVisibleContacts}\n          deleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nApp.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    }),\n  ),\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}